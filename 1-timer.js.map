{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst getStartBtn = document.querySelector('.start-btn');\nconst getTimer = document.querySelectorAll('.value');\nconst getInput = document.querySelector('.date-input');\ngetStartBtn.addEventListener('click', handlerTimer);\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    getStartBtn.disabled = true;\n\n    if (selectedDates[0] - Date.now() <= 0) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        messageColor: ' #fff',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n      });\n      return;\n    }\n    getStartBtn.disabled = false;\n    userSelectedDate = selectedDates[0];\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction handlerTimer(event) {\n  getStartBtn.disabled = true;\n  getInput.disabled = true;\n\n  const TimerId = setInterval(() => {\n    const createTime = userSelectedDate.getTime() - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(createTime);\n    (getTimer[0].textContent = days),\n      (getTimer[1].textContent = hours),\n      (getTimer[2].textContent = minutes),\n      (getTimer[3].textContent = seconds);\n\n    if (createTime <= 0) {\n      clearInterval(TimerId);\n      getStartBtn.disabled = false;\n      getInput.disabled = false;\n      getTimer.forEach(el => (el.textContent = '00'));\n      iziToast.show({\n        message: 'Time is up!',\n        messageColor: ' #fff',\n        backgroundColor: '#008000',\n        position: 'topRight',\n      });\n    }\n  }, 1000);\n}\n"],"names":["getStartBtn","getTimer","getInput","handlerTimer","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","addLeadingZero","hours","minutes","seconds","value","event","TimerId","createTime","el"],"mappings":"+IAMA,MAAMA,EAAc,SAAS,cAAc,YAAY,EACjDC,EAAW,SAAS,iBAAiB,QAAQ,EAC7CC,EAAW,SAAS,cAAc,aAAa,EACrDF,EAAY,iBAAiB,QAASG,CAAY,EAClD,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAN,EAAY,SAAW,GAEnBM,EAAc,CAAC,EAAI,KAAK,IAAG,GAAM,EAAG,CACtCC,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,QACd,gBAAiB,UACjB,SAAU,UAClB,CAAO,EACD,MACD,CACDP,EAAY,SAAW,GACvBI,EAAmBE,EAAc,CAAC,CACnC,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAOC,EAAe,KAAK,MAAMF,EAAK,KAAG,CAAC,EAC1CG,EAAQD,EAAe,KAAK,MAAOF,EAAK,MAAO,IAAI,CAAC,EACpDI,EAAUF,EAAe,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEK,EAAUH,EACd,KAAK,MAASF,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAC,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASH,EAAeI,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASb,EAAac,EAAO,CAC3BjB,EAAY,SAAW,GACvBE,EAAS,SAAW,GAEpB,MAAMgB,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAaf,EAAiB,QAAS,EAAG,KAAK,IAAG,EAClD,CAAE,KAAAO,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,GAAYN,EAAUU,CAAU,EAC7DlB,EAAS,CAAC,EAAE,YAAcU,EACxBV,EAAS,CAAC,EAAE,YAAcY,EAC1BZ,EAAS,CAAC,EAAE,YAAca,EAC1Bb,EAAS,CAAC,EAAE,YAAcc,EAEzBI,GAAc,IAChB,cAAcD,CAAO,EACrBlB,EAAY,SAAW,GACvBE,EAAS,SAAW,GACpBD,EAAS,QAAQmB,GAAOA,EAAG,YAAc,IAAK,EAC9Cb,EAAS,KAAK,CACZ,QAAS,cACT,aAAc,QACd,gBAAiB,UACjB,SAAU,UAClB,CAAO,EAEJ,EAAE,GAAI,CACT"}